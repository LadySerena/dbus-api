/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.7/samples
 */

plugins {
    id "nebula.ospackage" version "8.4.1"
}

if (tag != "1-fake") {
    def extractRelease = { it.split("-") }
    def full_version = extractRelease(tag)
    package_version = full_version[0]
    package_release = full_version[1]
}

task buildDbusApi(type: Exec) {
    workingDir project.projectDir
    commandLine 'go', 'build', './cmd/dbus-api'
}

task buildPackage(type: Deb) {
    dependsOn buildDbusApi
    packageName 'dbus-api'
    version package_version
    release package_release
    arch "amd64"
    os LINUX
    preInstall file('./scripts/preInstall.sh')
    postInstall file('./scripts/postInstall.sh')
    requires('software-properties-common')//for polkit\
    recommends('apache2-utils') //for httpasswd

    from('resources/etc/polkit-1/localauthority/50-local.d'){
        into '/etc/polkit-1/localauthority/50-local.d/'
        user = 'root'
        permissionGroup = 'root'
        fileMode 0644
    }

    from(project.projectDir){
        into '/usr/sbin'
        include 'dbus-api'
        user = 'root'
        permissionGroup = 'root'
        fileMode = 0751
    }

    from('etc/systemd/system'){
        into '/etc/systemd/system'
        include 'dbus-api.service'
        user 'root'
        permissionGroup 'root'
        fileMode 0644
    }

}

task buildPackagePreCompiled(type: Deb) {
    packageName 'dbus-api'
    version package_version
    release package_release
    arch "amd64"
    os LINUX
    preInstall file('./scripts/preInstall.sh')
    postInstall file('./scripts/postInstall.sh')
    requires('software-properties-common')//for polkit\
    recommends('apache2-utils') //for httpasswd

    from('resources/etc/polkit-1/localauthority/50-local.d'){
        into '/etc/polkit-1/localauthority/50-local.d/'
        user = 'root'
        permissionGroup = 'root'
        fileMode 0644
    }

    from(project.projectDir){
        into '/usr/sbin'
        include 'dbus-api'
        user = 'root'
        permissionGroup = 'root'
        fileMode = 0751
    }

    from('etc/systemd/system'){
        into '/etc/systemd/system'
        include 'dbus-api.service'
        user 'root'
        permissionGroup 'root'
        fileMode 0644
    }

}